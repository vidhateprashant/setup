server.port=${PORT:0}
spring.application.name=setup-ws
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance-id:${random.value}}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://43.205.33.156:5432/monstarbill
spring.datasource.username=postgres
spring.datasource.password=ENC(jKMvE5L4ttGHvznPP3lD6FJA1v8ncP0U)

jasypt.encryptor.password=mbllocal

spring.jpa.properties.hibernate.default_schema=setup

bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000

#Feign client logging
logging.level.com.monstarbill.configs.feingclients.MasterServiceClient=DEBUG

#feign.circuitbreaker.enabled=true
#master.status.check=Request NOT found for the : Master status Communication
# actuator configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#CIRCUIT BREAKER
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
#rate in percentage
resilience4j.circuitbreaker.instances.masters-ws.failure-rate-threshold=50
#open state to half open state
resilience4j.circuitbreaker.instances.masters-ws.automatic-transition-from-open-to-half-open-enabled=true
#will be in open state for mentioned time
resilience4j.circuitbreaker.instances.masters-ws.wait-duration-in-open-state=10000ms
#window type 
resilience4j.circuitbreaker.instances.masters-ws.sliding-window-type=COUNT_BASED
#window size minimum call (half will be threshold)
resilience4j.circuitbreaker.instances.masters-ws.sliding-window-size=2
#minimum number of call for change the state
resilience4j.circuitbreaker.instances.masters-ws.minimum-number-of-calls=2
#buffer size
resilience4j.circuitbreaker.instances.masters-ws.event-consumer-buffer-size=10

#retry AOP order - 1-high & 10-lower
resilience4j.retry.retry-aspect-order=2
#max number of retry
resilience4j.retry.instances.masters-ws.max-attempts=3
#call after below wait duration
resilience4j.retry.instances.masters-ws.wait-duration=2s
#enable wait time exponential time backoff
resilience4j.retry.instances.masters-ws.enable-exponential-backoff=true
#enable wait time exponential time by 5x Multipler of wait duration
resilience4j.retry.instances.masters-ws.exponential-backoff-multiplier=5